# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

type Company {
    employees: [Employee!]
    id: ID!
    industry: String
    logo: Upload!
    logoSmall: Upload
    moreImages: [Upload!]
    moreImagesSmall: [Upload]
    name: String
    productPhotos: [Upload!]!
    productPhotosSmall: [Upload]!
}

type Employee {
    address: String
    company: Company
    firstName: String
    id: ID!
    lastName: String
    subordinates: [Employee!]
}

type Query {
    allCompanies: [Company!]
    allCompaniesPaginated(pagination: PaginationInput): [Company!]
    company(id: ID): Company
    employee(id: ID): Employee
}

enum fake__Locale {
    az
    cz
    de
    de_AT
    de_CH
    en
    en_AU
    en_BORK
    en_CA
    en_GB
    en_IE
    en_IND
    en_US
    en_au_ocker
    es
    es_MX
    fa
    fr
    fr_CA
    ge
    id_ID
    it
    ja
    ko
    nb_NO
    nep
    nl
    pl
    pt_BR
    ru
    sk
    sv
    tr
    uk
    vi
    zh_CN
    zh_TW
}

enum fake__Types {
    "An URL for an avatar"
    avatarUrl
    bankIdentifierCode
    bitcoinAddress
    city
    "Configure color with option: `baseColor`"
    colorHex
    colorName
    companyBS
    companyCatchPhrase
    companyName
    country
    countryCode
    county
    currencyCode
    currencyName
    currencySymbol
    dbCollation
    dbColumn
    dbEngine
    dbType
    domainName
    "Configure email provider with option: `emailProvider`"
    email
    fileExtension
    filename
    financeAccountName
    financeTransactionType
    firstName
    fullName
    "Configure date format with option `dateFormat`"
    futureDate
    hackerAbbr
    hackerPhrase
    "An image url. Configure image with options: `imageCategory`, `imageWidth`, `imageHeight` and `randomizeImageUrl`"
    imageUrl
    internationalBankAccountNumber
    ipv4Address
    ipv6Address
    jobTitle
    lastName
    latitude
    locale
    longitude
    "Lorem Ipsum text. Configure size with option `loremSize`"
    lorem
    macAddress
    mimeType
    "Sum of money. Configure with options `minMoney`/`maxMoney` and 'decimalPlaces'."
    money
    number
    "Configure password with option `passwordLength`"
    password
    "Configure date format with option `dateFormat`"
    pastDate
    phoneNumber
    product
    productCategory
    productMaterial
    productName
    "Configure date format with option `dateFormat`"
    recentDate
    secondaryAddress
    semver
    state
    stateAbbr
    "Configure address with option `useFullAddress`"
    streetAddress
    streetName
    url
    userAgent
    uuid
    word
    words
    zipCode
}

enum fake__imageCategory {
    abstract
    animals
    business
    cats
    city
    fashion
    food
    nature
    nightlife
    people
    sports
    technics
    transport
}

enum fake__loremSize {
    paragraph
    paragraphs
    sentence
    sentences
    word
    words
}

input PaginationInput {
    limit: Int
    offset: Int
}

input fake__color {
    blue255: Int = 0
    green255: Int = 0
    red255: Int = 0
}

input fake__options {
    "Only for type `colorHex`. [Details here](https://stackoverflow.com/a/43235/4989887)"
    baseColor: fake__color = {red255 : 0, green255 : 0, blue255 : 0}
    "Only for types `*Date`. Example value: `YYYY MM DD`. [Full Specification](http://momentjs.com/docs/#/displaying/format/)"
    dateFormat: String
    "Only for type `money`"
    decimalPlaces: Int
    "Only for type `email`"
    emailProvider: String
    "Only for type `imageUrl`"
    imageCategory: fake__imageCategory
    "Only for type `imageUrl`"
    imageHeight: Int
    "Only for type `imageUrl`"
    imageWidth: Int
    "Only for type `lorem`"
    loremSize: fake__loremSize
    "Only for type `money`"
    maxMoney: Float
    "Only for type `number`"
    maxNumber: Float
    "Only for type `money`"
    minMoney: Float
    "Only for type `number`"
    minNumber: Float
    "Only for type `password`"
    passwordLength: Int
    "Only for type `number`"
    precisionNumber: Float
    "Only for type `imageUrl`"
    randomizeImageUrl: Boolean
    "Only for type `streetAddress`"
    useFullAddress: Boolean
}


scalar Upload

scalar examples__JSON